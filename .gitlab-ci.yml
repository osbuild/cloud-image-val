stages:
  - init
  - test

.deps:
  image: python:3.8
  before_script:
    - apt-get update && apt-get install -y gnupg software-properties-common
    - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
    - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
    - apt-get update && apt-get install terraform
    - pip install -r requirements.txt

init:
  stage: init
  script:
    - schutzbot/update_github_status.sh start

aws:
  stage: test
  extends: .deps
  script:
    - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} python3 cloud-image-val.py -r cloud/sample/resources_aws.json -d -p -m 'not pub' -o report.xml
  after_script:
    - schutzbot/update_github_status.sh update || true
  artifacts:
    paths:
      - report.html
    when: always